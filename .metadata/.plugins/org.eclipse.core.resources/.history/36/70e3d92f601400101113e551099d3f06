package com.nit.entity;

import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import lombok.Setter;

@Entity
@Table(name="JPA_CUSTOMER")
@Setter
@Getter
//@NoArgsConstructor
@RequiredArgsConstructor
public class Customer {
	public Customer() 
	{
		System.out.println("Parent::Customer:: 0 Arg Constructor");
	}
	
	
	@Id
	@SequenceGenerator(name = "seq1",sequenceName = "cust_seq",initialValue = 10000,allocationSize = 2)
	@GeneratedValue(generator = "seq1",strategy = GenerationType.SEQUENCE)
	private Integer cno;
	@Column(length = 30)
	@NonNull
	private String cname;
	@Column(length = 30)
	@NonNull
	private String address;
	
	@OneToMany(targetEntity = PhoneNumber.class,cascade = CascadeType.ALL,mappedBy = "cust",fetch = FetchType.EAGER)//by default fetcHtype=LAZY
	//@OneToMany(targetEntity = PhoneNumber.class,mappedBy = "cust")// it will not reflect the modification on child table
	//@JoinColumn(name ="CUSTOMER_ID",referencedColumnName ="cno") // in pace of this mappedBy = "cust"
	private Set<PhoneNumber> phonesInfo;

	//toString method
	@Override
	public String toString() {
		return "Customer [cno=" + cno + ", cname=" + cname + ", address=" + address + "]";
	}
	
	
	

}
